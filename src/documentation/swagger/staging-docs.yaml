swagger: "2.0"

#######################################################################
#                         API Information                             #
#######################################################################

info:
  title: "ADPQ 2018"
  version: "0.0.1"
  description: "Swagger documentation for the HOTB Software submission for the Agile Development Prequalified Vendor Pool.\n\nFebruary, 2018"
host: "adpq-staging.hotbsoftware.com"
basePath: "/api/v1"
schemes:
- "http"
- "https"
tags:
  - name: "Articles"
  - name: "Users"
  - name: "Agencies"
  - name: "Tags"



#######################################################################
#                             Headers                                 #
#######################################################################

securityDefinitions:
  apiKey:
    in: "header"
    type: "apiKey"
    name: "apiKey"
  # Bearer:
  #     type: apiKey
  #     name: Authorization
  #     in: header
  #     description: "For accessing the API a valid JWT token must be passed in all the queries in the Authorization header.\n\n\nA valid JWT token is generated by the API and retourned as answer of a call to the route /login giving a valid user & password.\n\n\nThe following syntax must be used in the Authorization header\nBearer xxxxxx.yyyyyyy.zzzzzz\n\n"
      

#######################################################################
#                             Routes                                  #
#######################################################################

paths:
  /articles:
    get:
      summary: Get all articles
      tags:
        - Articles
      security:
        - apiKey: []
      parameters:
        - name: sort
          in: query
          description: Primary attribute to sort results by.
          required: false
          type: string
        - name: order
          in: query
          description: Primary order to sort results by.
          required: false
          type: integer
        - name: secondarySort
          in: query
          description: Secondary attribute to sort results by.
          required: false
          type: string
        - name: secondaryOrder
          in: query
          description: Secondary order to sort results by.
          required: false
          type: integer    
        - name: skip
          in: query
          description: Number of results to skip. Used with pagination.
          required: false
          type: integer
        - name: limit
          in: query
          description: Number of results to return. Used with pagination.
          required: false
          type: integer           
      responses:
        "200":
          description: A paged array of articles
          schema:
            type: object
            $ref: "#/definitions/Article"
        "400":
          description: Bad request
        "429":
          description: Too many requests

  /agencies:
    get:
      summary: Get all agencies
      tags:
        - Agencies
      security:
        - apiKey: []
      parameters:
        - name: sort
          in: query
          description: Primary attribute to sort results by.
          required: false
          type: string
        - name: order
          in: query
          description: Primary order to sort results by.
          required: false
          type: integer
        - name: secondarySort
          in: query
          description: Secondary attribute to sort results by.
          required: false
          type: string
        - name: secondaryOrder
          in: query
          description: Secondary order to sort results by.
          required: false
          type: integer    
        - name: skip
          in: query
          description: Number of results to skip. Used with pagination.
          required: false
          type: integer
        - name: limit
          in: query
          description: Number of results to return. Used with pagination.
          required: false
          type: integer           
      responses:
        "200":
          description: A paged array of agencies
          schema:
            type: object
            properties:
              data:
                type: array
                items:    
                    $ref: "#/definitions/Agency"
        "400":
          description: Bad request
        "429":
          description: Too many requests          

  /tags:
    get:
      summary: Get all tags
      tags:
        - Tags
      security:
        - apiKey: []        
      parameters:
        - name: sort
          in: query
          description: Primary attribute to sort results by.
          required: false
          type: string
        - name: order
          in: query
          description: Primary order to sort results by.
          required: false
          type: integer
        - name: secondarySort
          in: query
          description: Secondary attribute to sort results by.
          required: false
          type: string
        - name: secondaryOrder
          in: query
          description: Secondary order to sort results by.
          required: false
          type: integer    
        - name: skip
          in: query
          description: Number of results to skip. Used with pagination.
          required: false
          type: integer
        - name: limit
          in: query
          description: Number of results to return. Used with pagination.
          required: false
          type: integer           
      responses:
        "200":
          description: A paged array of tags
          schema:
            type: object
            properties:
              data:
                type: array
                items:    
                    $ref: "#/definitions/Tag"
              
        "400":
          description: Bad request
        "429":
          description: Too many requests              

#######################################################################
#                             Models                                  #
#######################################################################

definitions:

  # Article
  Article:
    type: object
    properties:
      id:
        type: string
      createdAt:
        type: string
      createdBy:
        type: string
      agency:
        type: string
      role:
        type: integer
      status:
        type: integer
      title:
        type: string
      summary:
        type: string
      description:
        type: string
      tags:
        type: array
        items:
          type: string
      attachments:
        type: array
        items:
          type: string
      sharedUsers:
        type: array
        items:
          type: string          
      views:
        type: integer
      approvedBy:
        type: string

  # Tag
  Tag:
    type: object
    properties:
      id:
        type: string
      name:
        type: string



  # Agency
  Agency:
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      articleCount:
        type: integer

            
        
{
  "swagger": "2.0",
  "info": {
    "title": "ADPQ 2018",
    "version": "0.0.1",
    "description": "Swagger documentation for the HOTB Software submission for the Agile Development Prequalified Vendor Pool in 2018."
  },
  "host": "adpq-staging.hotbsoftware.com",
  "basePath": "/api/v1",
  "schemes": [
    "http",
    "https"
  ],
  "tags": [
    {
      "name": "Articles"
    },
    {
      "name": "Users"
    },
    {
      "name": "Agencies"
    },
    {
      "name": "Tags"
    }
  ],
  "securityDefinitions": {
    "apiKey": {
      "in": "header",
      "type": "apiKey",
      "name": "apiKey"
    },
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "For accessing the API a valid JWT token must be passed in all the queries in the Authorization header.\n\n\nA valid JWT token is generated by the API and retourned as answer of a call to the route /login giving a valid user & password.\n\n\nThe following syntax must be used in the Authorization header\nBearer xxxxxx.yyyyyyy.zzzzzz\n\n"
    }
  },
  "paths": {
    "/articles": {
      "get": {
        "summary": "Get all articles",
        "tags": [
          "Articles"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Primary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Primary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "secondarySort",
            "in": "query",
            "description": "Secondary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "secondaryOrder",
            "in": "query",
            "description": "Secondary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of results to skip. Used with pagination.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return. Used with pagination.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of articles",
            "schema": {
              "$ref": "#/definitions/Article"
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "post": {
        "summary": "Create a new article",
        "tags": [
          "Articles"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single article",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Article"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/articles/{articleId}": {
      "get": {
        "summary": "Get article by id",
        "tags": [
          "Articles"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "Id of the article",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single article",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Article"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "patch": {
        "summary": "Update article by id",
        "tags": [
          "Articles"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "Id of the article",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single article",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Article"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "delete": {
        "summary": "Delete article by id",
        "tags": [
          "Articles"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "articleId",
            "in": "path",
            "description": "Id of the article",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single article",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Article"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Primary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Primary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "secondarySort",
            "in": "query",
            "description": "Secondary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "secondaryOrder",
            "in": "query",
            "description": "Secondary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of results to skip. Used with pagination.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return. Used with pagination.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of users",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "post": {
        "summary": "Create a new user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "summary": "Get user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "patch": {
        "summary": "Update user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "delete": {
        "summary": "Delete user by id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Id of the user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/users/login": {
      "post": {
        "summary": "Login as user id",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single user",
            "schema": {
              "type": "object",
              "properties": {
                "token": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/users/logout": {
      "post": {
        "summary": "Logout as current user",
        "tags": [
          "Users"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "Some response..."
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/agencies": {
      "get": {
        "summary": "Get all agencies",
        "tags": [
          "Agencies"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Primary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Primary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "secondarySort",
            "in": "query",
            "description": "Secondary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "secondaryOrder",
            "in": "query",
            "description": "Secondary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of results to skip. Used with pagination.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return. Used with pagination.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of agencies",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "post": {
        "summary": "Create a new agency",
        "tags": [
          "Agencies"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single agency",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/agencies/{agencyId}": {
      "get": {
        "summary": "Get agency by id",
        "tags": [
          "Agencies"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "Id of the agency",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single agency",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "patch": {
        "summary": "Update agency by id",
        "tags": [
          "Agencies"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "Id of the agency",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single agency",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "delete": {
        "summary": "Delete agency by id",
        "tags": [
          "Agencies"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "agencyId",
            "in": "path",
            "description": "Id of the agency",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single agency",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Agency"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/tags": {
      "get": {
        "summary": "Get all tags",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "sort",
            "in": "query",
            "description": "Primary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "order",
            "in": "query",
            "description": "Primary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "secondarySort",
            "in": "query",
            "description": "Secondary attribute to sort results by.",
            "required": false,
            "type": "string"
          },
          {
            "name": "secondaryOrder",
            "in": "query",
            "description": "Secondary order to sort results by.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "skip",
            "in": "query",
            "description": "Number of results to skip. Used with pagination.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return. Used with pagination.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "A paged array of tags",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "post": {
        "summary": "Create a new tag",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "A single tag",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    },
    "/tags/{tagId}": {
      "get": {
        "summary": "Get tag by id",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Id of the tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single tag",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "patch": {
        "summary": "Update tag by id",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Id of the tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single tag",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      },
      "delete": {
        "summary": "Delete tag by id",
        "tags": [
          "Tags"
        ],
        "security": [
          {
            "apiKey": []
          }
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "description": "Id of the tag",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A single tag",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "429": {
            "description": "Too many requests"
          }
        }
      }
    }
  },
  "definitions": {
    "Article": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        },
        "createdBy": {
          "type": "string"
        },
        "agency": {
          "type": "string"
        },
        "role": {
          "type": "integer"
        },
        "status": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "sharedUsers": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "views": {
          "type": "integer"
        },
        "approvedBy": {
          "type": "string"
        }
      }
    },
    "ArticleEdit": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "editedBy": {
          "type": "string"
        },
        "type": {
          "type": "integer"
        },
        "previousValue": {
          "type": "string"
        },
        "updatedValue": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "object",
          "properties": {
            "first": {
              "type": "string"
            },
            "last": {
              "type": "string"
            }
          }
        },
        "createdAt": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "role": {
          "type": "integer"
        }
      }
    },
    "UserNotification": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "timestamp": {
          "type": "string"
        },
        "sender": {
          "type": "string"
        },
        "recipient": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "attachments": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Tag": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      }
    },
    "Agency": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "articleCount": {
          "type": "integer"
        }
      }
    }
  }
}
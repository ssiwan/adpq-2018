openapi: 3.0.0

#######################################################################
#                      General API Information                        #
#######################################################################

servers: [
  {
    url: "http://adpq-staging.hotbsoftware.com/api/v1/",
    description: Staging Server
  },
  {
    url: "https://adpq.hotbsoftware.com/api/v1/",
    description: Production Server
  }
]

info:
  title: "ADPQ Knowledge Base"
  version: "0.0.1"
  description: |
    **Description**<br>Swagger documentation for the HOTB Software submission for the Agile Development Prequalified Vendor Pool in 2018.<br><br> **Getting Started**<br>Insert Content<br><br>**Authentication**<br>Insert Content<br><br>
  contact:
    email: edobyns@hotbsoftware.com
  license:
    name: MIT
    url: 'https://opensource.org/licenses/MIT'
    
externalDocs:
  description: GitHub Repo
  url: 'https://github.com/HOTB-Software/adpq-2018'

#######################################################################
#                               Tags                                  #
#######################################################################

tags:
  - name: "Users"
  - name: "Dashboard"
  - name: "Articles"
  - name: "Miscellaneous"

#######################################################################
#                             Routes                                  #
#######################################################################

paths:

######################
#       Users        #
######################          

  # POST /user/signIn - Sign in via Email/Password
  /user/signIn:
    post:
      tags:
        - Users
      summary: Sign in via Email/Password
      requestBody:
        description: A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
      responses:
        '400': 
          description: Bad Request
        '429':
          description: Too Many Requests  

#######################
#      Dashboard      #
#######################

  # GET /dashboardAnalytics
  /dashboardAnalytics:
    get:
      tags:
        - Dashboard
      summary: Get dashboard analytics
      security: 
        - Authorization: []
      responses:
        '400': 
          description: Bad Request
        '401':
          description: Unauthorized
        '429':
          description: Too Many Requests 
  
  # GET /dashboardTrending
  # GET /dashboardMyPublished
  # GET /dashboardWorkflow


######################
#      Articles      #
######################

  # GET /articles - Get all articles
  # GET /article/:id - Get an article by id
  # POST /article - Create a new article
  # POST /editArticle
  # GET /searchArticles
  # POST /articleComment

###########################
#      Miscellaneous      #
###########################                    

  # GET /agencies
  # GET /tags
  # POST /preS3

#######################################################################
#                            Components                               #
#######################################################################

components:

  securitySchemes:
    Authorization:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
  
    # Article
    Article:
      type: object
      properties:
        id:
          type: string
        createdAt:
          type: string
        createdBy:
          type: string
        agency:
          type: string
        role:
          type: integer
        status:
          type: integer
        title:
          type: string
        summary:
          type: string
        description:
          type: string
        tags:
          type: array
          items:
            type: string
        attachments:
          type: array
          items:
            type: string
        sharedUsers:
          type: array
          items:
            type: string          
        views:
          type: integer
        approvedBy:
          type: string
  
    # ArticleEdit
    ArticleEdit:
        type: object
        properties:
          id:
            type: string
          timestamp: 
            type: string
          editedBy: 
            type: string
          type: 
            type: integer
          previousValue:
            type: string
          updatedValue: 
            type: string
  
    # User
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: object
          properties:
            first: 
              type: string
            last:
              type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        email:
          type: string
        phone:
          type: string
        role:
          type: integer
  
    # Tag
    Tag:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
  
    # Agency
    Agency:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        articleCount:
          type: integer


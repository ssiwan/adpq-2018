{
  "openapi" : "3.0.0",
  "servers" : [ {
    "url" : "https://adpq-staging.hotbsoftware.com/api/v1",
    "description" : "Staging Server"
  }, {
    "url" : "https://adpq.hotbsoftware.com/api/v1",
    "description" : "Production Server"
  } ],
  "info" : {
    "title" : "ADPQ Knowledge Management Tool",
    "version" : "1.0.0",
    "description" : "**Demo**<br>[https://adpq.hotbsoftware.com](https://adpq.hotbsoftware.com)<br><br>**Credentials**<br><br>**Staff Account**<br>**Username:** adpq-staff.hotbsoftware.com<br>**PW:** Hotb&2018<br><br>**Admin Account**<br>**Username:** adpq-admin.hotbsoftware.com<br>**PW:** Hotb&2018<br><br>**Description**<br>This page contains the API documentation for the HOTB Software submission for the Agile Development Prequalified Vendor Pool in March 2018. All documentation conforms to the OpenAPI v3.0.0 specification.<br><br> **Getting Started**<br>Please refer to our [GitHub Page](https://github.com/HOTB-Software/adpq-2018) for additional documentation and instructions for setting up a local development environment. All requests listed on this page are currently operational. Please make sure to read the authentication instructions as well as review the list of status codes. <br><br>**Authentication**<br>Many of the requests found in this API require authentication via JWT. Upon successful log in you will receive an authentication token. Please use the token as the value for the 'Authorization' header to validate your credentials for subsequent requests.<br><br>**API Limitations**<br>The number of API requests from each ip address is throttled based on repeated usage. When the limit is reached an error with status code **429** for 'Too Many Requests' will be returned with a timestamp for the next allowed request. To remove this restriction for a specific ip address please email us with your name, company, a phone number we can reach you at, and the ip address to be whitelisted.<br><br>\n  <br>**Status Codes**<br>\n  <table>\n    <th>Code</th>\n    <th>Description</th>\n    <tr>\n      <td>200</td>\n      <td>Success</td>\n    </tr>\n    <tr>\n      <td>400</td>\n      <td>Bad Request</td>\n    </tr>\n    <tr>\n      <td>401</td>\n      <td>Unauthorized</td>\n    </tr>\n    <tr>\n      <td>404</td>\n      <td>Page Not Found</td>\n    </tr>\n    <tr>        \n    <tr>\n      <td>429</td>\n      <td>Too Many Requests<br></td>\n    </tr>        \n  </table>\n  <br><br>Have a great day!<br>(っˆڡˆς)<br><br>\n",
    "contact" : {
      "email" : "edobyns@hotbsoftware.com"
    },
    "license" : {
      "name" : "MIT",
      "url" : "https://opensource.org/licenses/MIT"
    }
  },
  "externalDocs" : {
    "description" : "GitHub Repository",
    "url" : "https://github.com/HOTB-Software/adpq-2018"
  },
  "tags" : [ {
    "name" : "Users"
  }, {
    "name" : "Dashboard"
  }, {
    "name" : "Articles"
  }, {
    "name" : "Miscellaneous"
  } ],
  "paths" : {
    "/user/signIn" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Sign in via email",
        "description" : "This endpoint allows a user to sign in via email and password. Upon successful login you will receive a JWT token to be used for all subsequent requests as well as some basic information about the user.",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "email" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "email" : "adpq-admin@hotbsoftware.com",
                  "password" : "Hotb&2018"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string"
                    },
                    "id" : {
                      "type" : "string"
                    },
                    "role" : {
                      "type" : "string"
                    },
                    "agencyName" : {
                      "type" : "string"
                    },
                    "agencyId" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get all users",
        "description" : "insert description",
        "parameters" : [ ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "401" : {
            "description" : "Unauthorized",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "429" : {
            "description" : "Too Many Requests",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "error" : {
                      "type" : "string"
                    },
                    "nextValidRequest" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Create a user",
        "description" : "insert description",
        "parameters" : [ ],
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "requestBody" : {
          "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "firstName" : {
                    "type" : "string"
                  },
                  "lastName" : {
                    "type" : "string"
                  },
                  "email" : {
                    "type" : "string"
                  },
                  "phone" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  },
                  "agencyId" : {
                    "type" : "string"
                  },
                  "allowedUploads" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "firstName" : "Delete",
                  "lastName" : "Me",
                  "email" : "deleteme@deleteme.com",
                  "phone" : "6666666666",
                  "password" : "asdf",
                  "agencyId" : "5a8b73f94212d1f20f847b9d",
                  "allowedUploads" : true
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string"
                    },
                    "userId" : {
                      "type" : "string"
                    },
                    "pswd" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/user/{userId}" : {
      "get" : {
        "tags" : [ "Users" ],
        "summary" : "Get user details",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "schema" : {
            "type" : "string",
            "example" : "5a8bbea2a2d13ad4ba539190"
          },
          "required" : true,
          "description" : "Numeric ID of the user to get"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "userId" : {
                          "type" : "string"
                        },
                        "name" : {
                          "type" : "string"
                        },
                        "email" : {
                          "type" : "string"
                        },
                        "phone" : {
                          "type" : "string"
                        },
                        "agencyName" : {
                          "type" : "string"
                        },
                        "agencyId" : {
                          "type" : "string"
                        },
                        "allowUploads" : {
                          "type" : "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      },
      "patch" : {
        "tags" : [ "Users" ],
        "summary" : "Edit user by user id",
        "description" : "insert description",
        "parameters" : [ ],
        "requestBody" : {
          "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "data" : {
                    "type" : "object",
                    "properties" : {
                      "userId" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "email" : {
                        "type" : "string"
                      },
                      "phone" : {
                        "type" : "string"
                      },
                      "agencyName" : {
                        "type" : "string"
                      },
                      "agencyId" : {
                        "type" : "string"
                      },
                      "allowUploads" : {
                        "type" : "boolean"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "token" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      },
      "delete" : {
        "tags" : [ "Users" ],
        "summary" : "Delete user by user id",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "in" : "path",
          "name" : "userId",
          "schema" : {
            "type" : "string",
            "example" : "5aaa1763a92f4c001918f83b"
          },
          "required" : true,
          "description" : "Numeric ID of the user to delete"
        } ],
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/user/editProfile" : {
      "patch" : {
        "tags" : [ "Users" ],
        "summary" : "Get user details",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ ],
        "requestBody" : {
          "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "firstName" : {
                    "type" : "string"
                  },
                  "lastName" : {
                    "type" : "string"
                  },
                  "password" : {
                    "type" : "string"
                  }
                },
                "example" : {
                  "firstName" : "newFirstName",
                  "lastName" : "newLastName",
                  "password" : "asdf"
                }
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "A JWT to be used within the 'Authentication' header in subsequent API requests that require authentication.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "status" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/dashboardAnalytics" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get dashboard analytics",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/dashboardTrending" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get trending articles",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/dashboardMyPublished" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get your latest published articles",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/dashboardWorkflow" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get the latest articles with status updates",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/adminDashboardDeclined" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get the latest articles with status updates",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/adminDashboardApproved" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get the latest articles with status updates",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/adminDashboardPending" : {
      "get" : {
        "tags" : [ "Dashboard" ],
        "summary" : "Get the latest articles with status updates",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/articles" : {
      "get" : {
        "tags" : [ "Articles" ],
        "summary" : "Get all articles",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      },
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Create an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/articles/{articleId}" : {
      "get" : {
        "tags" : [ "Articles" ],
        "summary" : "Get details of an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/editArticle" : {
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Edit an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/searchArticles" : {
      "get" : {
        "tags" : [ "Articles" ],
        "summary" : "Search for articles by keyword",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/articleComment" : {
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Search for articles by keyword",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/incrementViews/{articleId}" : {
      "patch" : {
        "tags" : [ "Articles" ],
        "summary" : "Increment the view count of an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/incrementShares/{articleId}" : {
      "patch" : {
        "tags" : [ "Articles" ],
        "summary" : "Increment the share count of an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/publishArticle" : {
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Publish an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/declineArticle" : {
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Publish an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/deleteArticle" : {
      "delete" : {
        "tags" : [ "Articles" ],
        "summary" : "Publish an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/deleteAttachment" : {
      "patch" : {
        "tags" : [ "Articles" ],
        "summary" : "Publish an article",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "parameters" : [ {
          "name" : "articleId",
          "in" : "path",
          "description" : "Id of the article to return",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/preS3" : {
      "post" : {
        "tags" : [ "Articles" ],
        "summary" : "Get a pre-signed url to use for uploading attachments",
        "description" : "insert description",
        "security" : [ {
          "Authorization" : [ ]
        } ],
        "responses" : {
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/agencies" : {
      "get" : {
        "tags" : [ "Miscellaneous" ],
        "summary" : "Get a list of all agencies",
        "description" : "insert description",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#components/schemas/Agency"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/tags" : {
      "get" : {
        "tags" : [ "Miscellaneous" ],
        "summary" : "Get a list of all tags",
        "description" : "insert description",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#components/schemas/Tag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    },
    "/suggestedTags" : {
      "get" : {
        "tags" : [ "Miscellaneous" ],
        "summary" : "Get suggested tags",
        "description" : "insert description",
        "responses" : {
          "200" : {
            "description" : "Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "#components/schemas/SuggestedTag"
                      }
                    }
                  }
                }
              }
            }
          },
          "400" : {
            "description" : "Bad Request"
          },
          "401" : {
            "description" : "Unauthorized"
          },
          "429" : {
            "description" : "Too Many Requests"
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "Authorization" : {
        "type" : "apiKey",
        "name" : "Authorization",
        "in" : "header"
      }
    },
    "schemas" : {
      "Article" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "agency" : {
            "type" : "string"
          },
          "role" : {
            "type" : "integer"
          },
          "status" : {
            "type" : "integer"
          },
          "title" : {
            "type" : "string"
          },
          "summary" : {
            "type" : "string"
          },
          "description" : {
            "type" : "string"
          },
          "lastUpdatedAt" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "object",
                "properties" : {
                  "first" : {
                    "type" : "string"
                  },
                  "last" : {
                    "type" : "string"
                  }
                }
              },
              "_id" : {
                "type" : "string"
              },
              "createdAt" : {
                "type" : "string"
              },
              "updatedAt" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              },
              "phone" : {
                "type" : "string"
              },
              "agency" : {
                "type" : "string"
              },
              "allowedUploads" : {
                "type" : "boolean"
              },
              "isDeleted" : {
                "type" : "boolean"
              },
              "role" : {
                "type" : "integer"
              }
            }
          },
          "tags" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "attachments" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "views" : {
            "type" : "integer"
          },
          "shares" : {
            "type" : "integer"
          },
          "comments" : {
            "type" : "array",
            "items" : {
              "$ref" : "#components/schemas/ArticleComment"
            }
          },
          "history" : {
            "type" : "array",
            "items" : {
              "$ref" : "#components/schemas/ArticleEdit"
            }
          }
        }
      },
      "ArticleEdit" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string"
          },
          "articleId" : {
            "type" : "string"
          },
          "status" : {
            "type" : "integer"
          },
          "createdAt" : {
            "type" : "string"
          },
          "createdBy" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "object",
                "properties" : {
                  "first" : {
                    "type" : "string"
                  },
                  "last" : {
                    "type" : "string"
                  }
                }
              },
              "_id" : {
                "type" : "string"
              },
              "createdAt" : {
                "type" : "string"
              },
              "updatedAt" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              },
              "phone" : {
                "type" : "string"
              },
              "agency" : {
                "type" : "string"
              },
              "allowUploads" : {
                "type" : "boolean"
              },
              "isDeleted" : {
                "type" : "boolean"
              },
              "role" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "ArticleComment" : {
        "type" : "object",
        "properties" : {
          "_id" : {
            "type" : "string"
          },
          "articleId" : {
            "type" : "string"
          },
          "comment" : {
            "type" : "string"
          },
          "createdAt" : {
            "type" : "string"
          },
          "commenter" : {
            "type" : "object",
            "properties" : {
              "name" : {
                "type" : "object",
                "properties" : {
                  "first" : {
                    "type" : "string"
                  },
                  "last" : {
                    "type" : "string"
                  }
                }
              },
              "_id" : {
                "type" : "string"
              },
              "createdAt" : {
                "type" : "string"
              },
              "updatedBy" : {
                "type" : "string"
              },
              "email" : {
                "type" : "string"
              },
              "phone" : {
                "type" : "string"
              },
              "agency" : {
                "type" : "string"
              },
              "allowUploads" : {
                "type" : "boolean"
              },
              "isDeleted" : {
                "type" : "boolean"
              },
              "role" : {
                "type" : "integer"
              }
            }
          }
        }
      },
      "User" : {
        "type" : "object",
        "properties" : {
          "userId" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "email" : {
            "type" : "string"
          },
          "phone" : {
            "type" : "string"
          },
          "agencyName" : {
            "type" : "string"
          },
          "agencyId" : {
            "type" : "string"
          },
          "allowUploads" : {
            "type" : "boolean"
          }
        }
      },
      "Tag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          }
        }
      },
      "SuggestedTag" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "articleCount" : {
            "type" : "integer"
          }
        }
      },
      "Agency" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "string"
          },
          "name" : {
            "type" : "string"
          },
          "articleCount" : {
            "type" : "integer"
          }
        }
      }
    }
  }
}